/*	File:		TT800.h	Contains:	Header file for TT800 RNG.	Written by:	Peter Castine	Copyright:	© 2001-2006 Peter Castine	Change History (most recent first):         <1>     26Ð2Ð06    pc      First checked in. Split off  TT800 RNG from LitterLib.c.*//****************************************************************************************** ******************************************************************************************/#pragma once#ifndef __TT800_H__#define __TT800_H__#pragma mark ¥ Include Files#ifndef _EXT_H_	#include "ext.h"#endif#ifndef _EXT_MESS_H_	#include "ext_mess.h"#endif#ifndef _EXT_PROTO_H_	#include "ext_proto.h"#endif#pragma mark ¥ Constants#pragma mark ¥ Type Definitions	// Size of seeds component of tt800Data#define	kTT800SeedArraySize		25typedef struct tt800Data {				unsigned long	seeds[kTT800SeedArraySize];				int				curSeed;				} tTT800Data;typedef tTT800Data* tTT800DataPtr;#pragma mark ¥ Global Variables#pragma mark ¥ Function Prototypesunsigned long		TT800			(tTT800DataPtr);void				TT800Init		(void);//void				TT800Seed		(tTT800DataPtr, unsigned long);void				TT800Seed		(tTT800DataPtr, UInt32);tTT800DataPtr		TT800New		(unsigned long);static inline void	TT800Free		(tTT800DataPtr);#ifdef __MAX_MSP_OBJECT__	void			Taus88SigVector	(tSampleVector, unsigned);	void			Taus88SigVectorMasked									(tSampleVector, unsigned, unsigned, unsigned);	float			Taus88TriSig	(void);#endif#pragma mark -#pragma mark ¥ Inline Functions & Macrosstatic inline void TT800Free	(tTT800DataPtr iData)					{ if (iData != NULL) freebytes((char*) iData, sizeof(tTT800Data)); }#endif		// #ifndef __TT800_H__